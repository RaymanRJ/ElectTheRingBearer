name: 'CI/CD'

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  TF_VERSION: '1.5.6'
  TF_ACTION_WORKING_DIR: './terraform'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'terraform') || contains(toJSON(github.event.commits.*.modified), 'terraform/')"


    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          
      - name: 'Terraform Init'
        run: terraform init -input=false

      - name: 'Terraform Validate'
        run: terraform validate -no-color

      - name: 'Terraform Plan'
        run: terraform plan -no-color

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve -input=false

  frontend:
    name: 'Frontend'
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'frontend') || contains(toJSON(github.event.commits.*.modified), 'frontend/')"
    
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Node.js'
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 'Install Dependencies'
        run: npm install
        working-directory: './frontend'
        
      - name: 'Run Tests'
        run: npm test
        working-directory: './frontend'

      - name: 'Build'
        run: npm run build
        working-directory: './frontend'